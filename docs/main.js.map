{"version":3,"sources":["./src/app/components/user-grid-list/user-grid-list.component.html","./src/app/components/user-grid-list/user-grid-list.component.ts","./src/environments/environment.ts","./src/app/components/common/user/user-grid-list-item/user-grid-list-item.component.html","./src/app/components/common/user/user-grid-list-item/user-grid-list-item.component.ts","./src/app/components/user-table/user-table.component.html","./src/app/components/user-table/user-table.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"user-grid-list\">\n    <app-user-grid-list-item *ngFor=\"let user of users\" [user]=\"user\" (onUserGridClick)=\"onUserGridClick\">\n    </app-user-grid-list-item>\n</div>\n<div class=\"router-navigations\">\n    <button mat-raised-button color=\"primary\" routerLink=\"/user-table\">Example 2</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-user-grid-list',\n  templateUrl: './user-grid-list.component.html',\n  styleUrls: ['./user-grid-list.component.scss']\n})\nexport class UserGridListComponent implements OnInit {\n\n  users: User[];\n  constructor(private userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.users = this.userService.getUsers();\n    console.log(this.users);\n  }\n\n  onUserGridClick() {\n    alert('clicked');\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<mat-card matRipple *ngIf=\"user\" class=\"user-grid-item\">\n    <div class=\"user-avatar\">\n        <img src=\"./assets/images/avatar/male-user-svgrepo-com.svg\" alt=\"user-icon\">\n    </div>\n    <div class=\"user-details\">\n        <div class=\"user-name\">{{user.first_name}} {{user.last_name}}</div>\n        <div class=\"user-email\">{{user.email}}</div>\n    </div>\n</mat-card>","import { Component, Input, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user.model';\n\n@Component({\n  selector: 'app-user-grid-list-item',\n  templateUrl: './user-grid-list-item.component.html',\n  styleUrls: ['./user-grid-list-item.component.scss']\n})\nexport class UserGridListItemComponent implements OnInit {\n\n  @Input() user: User;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"user-list-talbe\">\n\n    <table mat-table [dataSource]=\"users\" class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"first_name\">\n            <th mat-header-cell *matHeaderCellDef> FirstName </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.first_name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"last_name\">\n            <th mat-header-cell *matHeaderCellDef> LastName </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.last_name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef>Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"userTableColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: userTableColumns;\"></tr>\n\n    </table>\n</div>\n\n<div class=\"router-navigations\">\n    <button mat-raised-button color=\"primary\" routerLink=\"/user-gird\">Example 1</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-user-table',\n  templateUrl: './user-table.component.html',\n  styleUrls: ['./user-table.component.scss']\n})\nexport class UserTableComponent implements OnInit {\n\n  users: User[];\n  userTableColumns = [];\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.users = this.userService.getUsers();\n    this.userTableColumns = this.userService.getTableColumns();\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'user-grid';\n}\n","<mat-toolbar color=\"primary\">\n  <span>Q3. Design a Users grid in Angular 8, with fields First Name, Last Name, Email address.</span>\n</mat-toolbar>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserGridListComponent } from './components/user-grid-list/user-grid-list.component';\nimport { UserGridListItemComponent } from './components/common/user/user-grid-list-item/user-grid-list-item.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRippleModule } from '@angular/material/core';\nimport { UserTableComponent } from './components/user-table/user-table.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserGridListComponent,\n    UserGridListItemComponent,\n    UserTableComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatRippleModule,\n    MatButtonModule,\n    MatTableModule,\n    MatToolbarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { User } from '../interface/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  users: User[] = [\n    {\n      'id': 1,\n      'first_name': 'Swapnil',\n      'last_name': 'Tomake',\n      'email': 'swapniltomake999@gmail.com'\n    },\n    {\n      'id': 2,\n      'first_name': 'name1',\n      'last_name': 'surname1',\n      'email': 'email1@domain.com'\n    },\n    {\n      'id': 3,\n      'first_name': 'name2',\n      'last_name': 'surname2',\n      'email': 'email2@domain.com'\n    },\n    {\n      'id': 3,\n      'first_name': 'name3',\n      'last_name': 'surname3',\n      'email': 'email3@domain.com'\n    }\n  ]\n  constructor() {\n\n  }\n\n\n  getUsers() {\n    return this.users;\n  }\n  getTableColumns() {\n    return ['id', 'first_name', 'last_name', 'email'];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserGridListComponent } from './components/user-grid-list/user-grid-list.component';\nimport { UserTableComponent } from './components/user-table/user-table.component';\n\nconst routes: Routes = [\n  { path: '', component: UserGridListComponent },\n  { path: 'user-gird', component: UserGridListComponent },\n  { path: 'user-table', component: UserTableComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}